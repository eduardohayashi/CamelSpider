{"name":"Camelspider","tagline":"Uma nervosa spiderweb PHP 5.3!","body":"![Camel\r\nSpider](http://www.camel-spiders.net/images/camel-spider-head.jpg)\r\n\r\nCamelSpider é uma [aranha](http://www.camel-spiders.net/) ([Web crawler](http://en.wikipedia.org/wiki/Web_spider)) que coleta links e conteúdo de sites.\r\n\r\n        Exemplo de uso da CamelSpider:\r\n        Portal de notícias quer coletar novos documentos vindos de\r\n        fontes conhecidas de notícias, então, a partir de um cadastro destas\r\n        fontes, CamelSpider coleta estas novas notícias e armazena na base de\r\n        dados do portal.\r\n\r\n\r\nUm diferencial da CamelSpider, é oferecer um documento tem texto plano\r\nque reflete o conteúdo principal de cada conteúdo indexado.\r\n\r\nCom a CamelSpider, você pode fazer um leitor de Feed para sites que não\r\npossuem Feed!\r\n\r\n## Filtros\r\n\r\nEsse conteúdo é filtrado a partir de palavras chaves.\r\n\r\nA spider navega nestes sites, coleta os links que fazem parte do escopo do domínio e faz o processamento interno dessa informação.\r\n\r\nDe acordo com os filtros, cada documento coletado recebe uma avaliação\r\nde releância, sendo que esta pontuação pode ser:\r\n\r\n * 0) não contém conteúdo\r\n * 1) Possivelmente contém conteúdo\r\n * 2) Contém conteúdo e contém uma ou mais palavras chave desejadas pela assinatura ou não contém palavras indesejadas\r\n * 3) Contém conteúdo, contém palavras desejadas e não contém palavras indesejadas\r\n\r\n## Estrutura \r\n\r\nA Camel Spider é um componente a ser utilizado por uma aplicação que gerencie a base de assinaturas e receba o retorno do processamento para armazenamento em banco de dados.\r\n\r\nA Camel Spider utiliza componentes do Zend Framework 2, Docrine Common e Goutte, e presume que será instânciada dentro de um projeto com o autoloading corretamente configurado conforme a PRS-0.\r\n\r\nQueremos que a Camel Spider seja uma Spider Web que supra necessidades de projetos em PHP 5.3.\r\n\r\nO [Camel Spider Bundle](http://github.com/gpupo/CamelSpiderBundle) integra a Camel Spider ao Symfony 2 e gerencia as assinaturas e o cache de informações e neste projeto complementar você pode visualizar a implementação de componentes que a CamelSpider utiliza como dependency injection mas não os implementa por ser fora de seu escopo.\r\n\r\n## Config\r\n\r\n        camelSpider:\r\n            save_document:  false | true\r\n            memory_limit:   80 (MB)\r\n            requests_limit: 300\r\n            log_level:      1~5\r\n            minimal_relevancy: 3\r\n\r\n## Otimização e cache\r\n\r\nA cada requisição é consumido memória.\r\nPara evitar isso, os objetos são cacheados em disco, portanto é\r\nnecessário informar um objeto cache onde seja possível gravar e\r\nrecuperar informações a partir de um hash.\r\n\r\n\r\nO objeto gravado é serializado pelo componente [Zend Cache](http://framework.zend.com/manual/en/zend.cache.html).\r\nEste objeto é passado ao construtor da Camel Spider (Dependency\r\ninjection).\r\n\r\nVocê pode implementar este serviço de cache mas também pode utilizar o  [Camel Spider Bundle](http://github.com/gpupo/CamelSpiderBundle) como referência de implementação.\r\n\r\n\r\nOs objetos capturados são retornados pelo processamento inicial, e são\r\nacessados diretamente do cache, pela aplicação que os utiliza.\r\n\r\n## Dependências\r\n\r\n* Symfony Components: BrowserKit, ClassLoader, CssSelector, DomCrawler, Finder, and Process\r\n* Zend Framework 2 libraries: Cache, Date, Uri, Http, and Validate\r\n* PEAR [Text_Diff -maybe!](http://pear.php.net/package/Text_Diff)\r\n* [Respect\\Validation](http://respect.github.com)\r\n\r\n\r\n## Você pode contribuir com o projeto!\r\n\r\nEste README precia de tradução e ainda temos muito trabalho pela frente e gostaríamos da sua ajuda.\r\nCoisas para fazer:\r\n\r\n    - Criar sandbox para facilitar os testes\r\n    - Criar testes unitários\r\n    - Melhorar a documentação em Inglês\r\n    - Corrigir coding standards\r\n\r\n\r\n## Documentação\r\n\r\nA documentação dos componentes é feita com o [DocBlox](http://www.docblox-project.org/) \r\ne é compilada no diretório doc/ utilizando-se do comando\r\n`./bin/generate-documentation`\r\n\r\nEste projeto utiliza idéias e conceitos de projetos existentes, sendo eles:\r\n\r\n* [Swish-e - Pearl](http://swish-e.org/docs/spider.html)\r\n\r\n\r\n## License\r\n\r\nCamelSpider is licensed under the MIT license. \r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","google":""}